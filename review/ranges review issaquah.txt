-- P0370R2 --

alg.general/16 "implementations shall provide" => remove shall

17 seems to fall short; i.e., could ask to convert to function pointer.

18 Wording makes STL nervous ... We could get rid of the weasel wording after removing the deprecated APIs. Limit the possible damage to just these deprecated overloads.

Assignable should require a non-const lvalue LHS.

"Args.." typo

5.1/7 "customization points objects" s/points/point/

ranges::swap; if overload resolution selects some function [utility.swap]/1.1

STL: Missing conditional noexcept on 1.1 different meaning than typically used for "equivalent to" in the library. Need blanket wording to indicate that means constexpr and noexcept also.

remove "ranges::swap has type void" in utility.swap/1.3

strike [taggedtup.tag]/25 "throws"

Cleanup consistency in the last para of swap "if blah is satisfied" should consistently use the arguments or not.

"if that expression is valid" on every bullet of every customization point.

missing rparens in ranges::end

Cast with static_cast for all the (const T&) casts in the customization points.

nuke bullet 2 of rbegin and rend (let arrays fall through)

"whenever ranges::size(E) is a valid expression, *its* type"

remark vs note when observing the postconditions of CPOs (specifically empty)

!= in empty should be ==. Wow.

constexpr things that are constexpr in the WP; specifically advance, distance, next prev.

delete excess ">" from advance p6.

Consider removing the allowance for operator* to be modifying, especially in common_iterator.

"sent" is a bad name (common_iterator)

common_iterator: We can't assign something that is not initialized. destroys **all** members that are initialized.

op< for counted_iterator shouldn't that be a note?

-- P0441 --

"decltype(E) is T" should be "decltype((E)) is T"

move_sentinel constructor mis-use of literal type. shall -> is.

move_sentinel assignment operator returns what?

stray ```

equivalent to **return** xxx

adn -> and
